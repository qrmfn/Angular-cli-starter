
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}



http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        off;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    client_max_body_size 5m;


    gzip  on;

    gzip_comp_level 5;

    gzip_min_length    256;

    gzip_types
           application/atom+xml
           application/javascript
           application/json
           application/ld+json
           application/manifest+json
           application/rss+xml
           application/vnd.geo+json
           application/vnd.ms-fontobject
           application/x-font-ttf
           application/x-web-app-manifest+json
           application/xhtml+xml
           application/xml
           font/opentype
           image/bmp
           image/svg+xml
           image/x-icon
           text/cache-manifest
           text/css
           text/plain
           text/vcard
           text/vnd.rim.location.xloc
           text/vtt
           text/x-component
           text/x-cross-domain-policy;

    gzip_vary on;

    server {
        listen       8324;
        server_name  localhost;
        root   /webroot;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            index  /Angular-cli-starter/index.html;
        }
        location /Angular-cli-starter {
          try_files $uri /Angular-cli-starter/index.html;
        }
        location /Angular-cli-starter/login {
            try_files $uri$args $uri$args/ $uri/ /Angular-cli-starter/index.html =404;
        }
        location /Angular-cli-starter/main {
            try_files $uri$args $uri$args/ $uri/ /Angular-cli-starter/index.html =404;
        }
        location /api/Angular-cli-starter {
            proxy_pass  http://EV_WEBSERVER_IP:EV_WEBSERVER_PORT;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # Expire rules for static content

        # No default expire rule. This config mirrors that of apache as outlined in the
        # html5-boilerplate .htaccess file. However, nginx applies rules by location,
        # the apache rules are defined by type. A consequence of this difference is that
        # if you use no file extension in the url and serve html, with apache you get an
        # expire time of 0s, with nginx you'd get an expire header of one month in the
        # future (if the default expire rule is 1 month). Therefore, do not use a
        # default expire rule with nginx unless your site is completely static

        # cache.appcache, your document html and data
        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
          add_header Cache-Control "max-age=0";
        }

        # Feed
        location ~* \.(?:rss|atom)$ {
          add_header Cache-Control "max-age=3600";
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|mp4|ogg|ogv|webm|htc)$ {
          access_log off;
          add_header Cache-Control no-store;
        }

        # Media: svgz files are already compressed.
        location ~* \.svgz$ {
          access_log off;
          gzip off;
          add_header Cache-Control "max-age=2592000";
        }

        # CSS and Javascript
        location ~* \.(?:css|js)$ {
          add_header Cache-Control "max-age=2592000";
          access_log off;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
